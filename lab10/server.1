Script started on 2020-03-16 22:07:36-0400
wolf:~/Documents/csc209/zhuobenj/lab10$ gdb bufserver
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) start
Temporary breakpoint 1 at 0xce2: file bufserver.c, line 18.
Starting program: /h/u9/c9/00/zhuobenj/Documents/csc209/zhuobenj/lab10/bufserver 

Temporary breakpoint 1, main () at bufserver.c:18
18      int main() {
(gdb) break set_up_soc[K[Kerver_socket
Breakpoint 2 at 0x555555554f17: file socket.c, line 35.
(gdb) next
21          setbuf(stdout, NULL);
(gdb) next
23          struct sockaddr_in *self = init_server_addr(PORT);
(gdb) n
24          int listenfd = set_up_server_socket(self, 5);
(gdb) n

Breakpoint 2, set_up_server_socket (self=0x555555757260, num_queue=5) at socket.c:35
35      int set_up_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) n
36          int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) n
37          if (soc < 0) {
(gdb) n
44          int on = 1;
(gdb) n
45          int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) n
47          if (status < 0) {
(gdb) n
53          if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) n
60          if (listen(soc, num_queue) < 0) {
(gdb) n
66          return soc;
(gdb) n
67      }
(gdb) n
main () at bufserver.c:27
27              int fd = accept_connection(listenfd);
(gdb) n
Waiting for a new connection...
New connection accepted from 127.0.0.1:49964
28              if (fd < 0) {
(gdb) [K(gdb) n
33              char buf[BUFSIZE] = {'\0'};
(gdb) n
34              int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35              int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) n
36              char *after = buf;       // Pointer to position after the data in buf
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58                      buf[where - 2] = '\0';
(gdb) n
59                      printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
65                      inbuf -= nbytes;
(gdb) n
70                      memmove(buf, buf + where, nbytes - where); 
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
75                  after = buf + nbytes - where;
(gdb) n
76                  room -= where;
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
75                  after = buf + nbytes - where;
(gdb) n
76                  room -= where;
(gdb) n
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41                  inbuf += nbytes;
(gdb) n
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58                      buf[where - 2] = '\0';
(gdb) n
59                      printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
65                      inbuf -= nbytes;
(gdb) n
70                      memmove(buf, buf + where, nbytes - where); 
(gdb) n

Program received signal SIGSEGV, Segmentation fault.
__memmove_ssse3 () at ../sysdeps/x86_64/multiarch/memcpy-ssse3.S:2830
2830    ../sysdeps/x86_64/multiarch/memcpy-ssse3.S: No such file or directory.
(gdb) n[Kexit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

        Inferior 1 [process 20676] will be killed.

Quit anyway? (y or n) exi[K[K[KY
wolf:~/Documents/csc209/zhuobenj/lab10$ exit
exit

Script done on 2020-03-16 22:13:03-0400
